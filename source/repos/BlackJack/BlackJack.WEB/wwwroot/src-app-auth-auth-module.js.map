{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.scss","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/pages/login-page/login-page.component.html","webpack:///./src/app/auth/pages/login-page/login-page.component.scss","webpack:///./src/app/auth/pages/login-page/login-page.component.ts","webpack:///./src/app/auth/pages/registration-page/registration-page.component.html","webpack:///./src/app/auth/pages/registration-page/registration-page.component.scss","webpack:///./src/app/auth/pages/registration-page/registration-page.component.ts","webpack:///./src/app/shared/validators/must-match.validator.ts","webpack:///./src/app/shared/validators/password.validator.ts","webpack:///./src/app/shared/validators/year-range.validator.ts"],"names":[],"mappings":"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","file":"src-app-auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginAuthComponent } from 'src/app/auth/pages/login-page/login-page.component';\r\nimport { RegistrationAuthComponent } from 'src/app/auth/pages/registration-page/registration-page.component';\r\nimport { AuthComponent } from 'src/app/auth/auth.component';\r\n\r\nconst routes: Routes = [ \r\n  { path: '', component: AuthComponent, \r\n  children:[{ \r\n    path: 'login', component: LoginAuthComponent },\r\n  { path: 'register', component: RegistrationAuthComponent }]},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n  <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from 'src/app/auth/auth-routing.module';\r\nimport { LoginAuthComponent } from 'src/app/auth/pages/login-page/login-page.component';\r\nimport { RegistrationAuthComponent } from 'src/app/auth/pages/registration-page/registration-page.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { AuthComponent } from 'src/app/auth/auth.component';\r\n@NgModule({\r\n  declarations: [LoginAuthComponent, RegistrationAuthComponent,AuthComponent],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n  </div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasErrors('email',loginForm)\\\" class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"loginForm.get('email').errors.required\\\">\\r\\n      Email is required.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"loginForm.get('email').errors.email\\\">\\r\\n      Email not validate\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"loginForm\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n      formControlName=\\\"password\\\">\\r\\n  </div>\\r\\n  <div\\r\\n    *ngIf=\\\"hasErrors('password',loginForm)\\\"\\r\\n    class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"loginForm.get('password').errors.required\\\">\\r\\n      Password is required.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"loginForm.get('password').errors.minlength\\\">\\r\\n      Password minLength 6\\r\\n    </div>\\r\\n    <div *ngIf=\\\"loginForm.get('password').errors.pattern\\\">\\r\\n      Password not validate\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"loginForm\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"div {\\n  margin-bottom: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wYWdlcy9sb2dpbi1wYWdlL0M6XFxVc2Vyc1xcQW51aXRleC04NFxcZ2l0XFxXZWJcXHNvdXJjZVxccmVwb3NcXEJsYWNrSmFja1xcQmxhY2tKYWNrLldFQlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxhdXRoXFxwYWdlc1xcbG9naW4tcGFnZVxcbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9wYWdlcy9sb2dpbi1wYWdlL2xvZ2luLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXZ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxJTsgXHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { LoginAccountView } from 'src/app/shared/entities/auth/login-account.view';\r\nimport { LoginAccountResponseView } from 'src/app/shared/entities/auth/login-account-response.view';\r\nimport { passwordValidation } from 'src/app/shared/validators/password.validator';\r\nimport { BaseComponent } from 'src/app/shared/components/base/base.component';\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginAuthComponent extends BaseComponent {\r\n  private loginForm: FormGroup;\r\n  constructor(private readonly authService: AuthService, private readonly formBuilder: FormBuilder, private readonly router: Router) {\r\n    super();\r\n    this.initForms();\r\n  }\r\n  ngOnInit() {\r\n  }\r\n  private initForms(): void {\r\n    this.loginForm = this.formBuilder.group({\r\n      'email': ['', [Validators.required, Validators.email]],\r\n      'password': ['', [Validators.required, Validators.minLength(6), passwordValidation]],\r\n    });\r\n  }\r\n  private login(): void {\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } \r\n    const loginAccount: LoginAccountView = {\r\n      ...this.loginForm.value\r\n    };\r\n    this.authService.login(loginAccount)\r\n      .pipe(takeUntil(this.componetDestroyed))\r\n      .subscribe((response: LoginAccountResponseView) => {\r\n        this.router.navigate([\"/game/home\"]);\r\n      });\r\n  }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n    <h2>Please enter your information</h2>\\r\\n  </div>\\r\\n</div>\\r\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <label for=\\\"email\\\">Email</label>\\r\\n    <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"hasErrors('email',registerForm)\\\" class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"registerForm.get('email').errors.required\\\">\\r\\n      Email is required.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('email').errors.email\\\">\\r\\n      Email not validate\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <label for=\\\"name\\\">Name</label>\\r\\n    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"hasErrors('name',registerForm)\\\"\\r\\n    class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"registerForm.get('name').errors.required\\\">\\r\\n      Name is required.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('name').errors.maxlength\\\">\\r\\n      Name max Length 15\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <label for=\\\"year\\\">Year</label>\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" placeholder=\\\"Year\\\" formControlName=\\\"year\\\">\\r\\n  </div>\\r\\n  <div *ngIf=\\\"hasErrors('year',registerForm)\\\" class=\\\"alert alert-danger\\\">\\r\\n   <div *ngIf=\\\"registerForm.get('year').errors.required\\\">\\r\\n     year is required.\\r\\n   </div>\\r\\n   <div *ngIf=\\\"registerForm.get('year').errors.minlength\\\">\\r\\n     year min min Length 4\\r\\n   </div>\\r\\n   <div *ngIf=\\\"registerForm.get('year').errors.maxlength\\\">\\r\\n     year min max Length 4\\r\\n   </div>\\r\\n   <div *ngIf=\\\"registerForm.get('year').errors.pattern\\\">\\r\\n     ONLY NUMB ERROR\\r\\n   </div>\\r\\n   <div *ngIf=\\\"registerForm.get('year').errors.ageRange\\\">\\r\\n     Year range from 1920 to 2019\\r\\n   </div>\\r\\n   <div *ngIf=\\\"registerForm.get('year').errors.adultRange\\\">\\r\\n     You don`t adult enough\\r\\n   </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <label for=\\\"password\\\">Password</label>\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\r\\n      formControlName=\\\"password\\\">\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"hasErrors('password',registerForm)\\\"\\r\\n    class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"registerForm.get('password').errors.required\\\">\\r\\n      Password is required.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('password').errors.minlength\\\">\\r\\n      Password minLength 6\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('password').errors.passwordValidation\\\">\\r\\n      Password not validate\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <label for=\\\"confirmPassword\\\">Confirm password</label>\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Confirm password\\\"\\r\\n      formControlName=\\\"confirmPassword\\\">\\r\\n  </div>\\r\\n\\r\\n  <div\\r\\n  *ngIf=\\\"hasErrors('confirmPassword',registerForm)\\\" class=\\\"alert alert-danger\\\">\\r\\n    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.required\\\">\\r\\n      Password is required.\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.minlength\\\">\\r\\n      Password min Length 6\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.passwordValidation\\\">\\r\\n      Password not validate\\r\\n    </div>\\r\\n    <div *ngIf=\\\"registerForm.get('confirmPassword').errors.mustMatch\\\">\\r\\n      Passwords must match\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"formGroup\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"registerForm.invalid\\\">Register</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"div {\\n  margin-bottom: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wYWdlcy9yZWdpc3RyYXRpb24tcGFnZS9DOlxcVXNlcnNcXEFudWl0ZXgtODRcXGdpdFxcV2ViXFxzb3VyY2VcXHJlcG9zXFxCbGFja0phY2tcXEJsYWNrSmFjay5XRUJcXENsaWVudEFwcC9zcmNcXGFwcFxcYXV0aFxccGFnZXNcXHJlZ2lzdHJhdGlvbi1wYWdlXFxyZWdpc3RyYXRpb24tcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9wYWdlcy9yZWdpc3RyYXRpb24tcGFnZS9yZWdpc3RyYXRpb24tcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIG1hcmdpbi1ib3R0b206IDElOyBcclxufSJdfQ== */\"","import { Component } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { mustMatch } from 'src/app/shared/validators/must-match.validator';\r\nimport { yearRange } from 'src/app/shared/validators/year-range.validator';\r\nimport { GetAllAccountView, UserGetAllAccountViewItem } from 'src/app/shared/entities/auth/get-all-account.view';\r\nimport { RegisterAccountView } from 'src/app/shared/entities/auth/register-account.view';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { ToastrMessagesService } from 'src/app/shared/services/toastr-messages.service';\r\nimport { LoginAccountResponseView } from 'src/app/shared/entities/auth/login-account-response.view';\r\nimport { passwordValidation } from 'src/app/shared/validators/password.validator';\r\nimport { BaseComponent } from 'src/app/shared/components/base/base.component';\r\n\r\n@Component({\r\n  selector: 'app-registration-page',\r\n  templateUrl: './registration-page.component.html',\r\n  styleUrls: ['./registration-page.component.scss']\r\n})\r\nexport class RegistrationAuthComponent extends BaseComponent {\r\n  private registerForm: FormGroup;\r\n  private accoutsModel: GetAllAccountView;\r\n  constructor(private readonly authService: AuthService, private readonly router: Router, private readonly formBuilder: FormBuilder,\r\n    private readonly toastrService: ToastrMessagesService) {\r\n    super();\r\n    this.initForms();\r\n  }\r\n  ngOnInit() {\r\n    this.initPage();\r\n  }\r\n  private initPage(): void{\r\n    this.authService.getAll()\r\n    .pipe(takeUntil(this.componetDestroyed))\r\n    .subscribe((response: GetAllAccountView) => {\r\n      this.accoutsModel = response;\r\n    });\r\n  }\r\n  private initForms(): void {\r\n    this.registerForm = this.formBuilder.group({\r\n      'email': ['', [Validators.required, Validators.email]],\r\n      'name': ['', [Validators.required, Validators.maxLength(15)]],\r\n      'year': ['', [Validators.required, Validators.minLength(4), yearRange, Validators.maxLength(4), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\r\n      'password': ['', [Validators.required, Validators.minLength(6), passwordValidation]],\r\n      'confirmPassword': ['', [Validators.required, Validators.minLength(6), passwordValidation]],\r\n    }, {\r\n        validator: mustMatch('password', 'confirmPassword')\r\n      });\r\n  }\r\n\r\n  private register(): void {\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    const registerAccount: RegisterAccountView = {\r\n      ...this.registerForm.value\r\n    };\r\n    const isExistUser: boolean = !!this.accoutsModel.users\r\n      .find((user: UserGetAllAccountViewItem) => user.email === registerAccount.email);\r\n    if (isExistUser) {\r\n      let errorMessage = { message: `Username ${registerAccount.email} is already taken` };\r\n      this.toastrService.warning(errorMessage.message);\r\n      return;\r\n    }\r\n      this.authService.register(registerAccount)\r\n        .pipe(takeUntil(this.componetDestroyed))\r\n        .subscribe((response: LoginAccountResponseView) => {\r\n          this.toastrService.success(`Email ${registerAccount.email} is successfully register.`);\r\n          this.router.navigate(['/auth/login']);\r\n        });\r\n    }\r\n}\r\n\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function mustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function passwordValidation(control: AbstractControl): { [key: string]: boolean } | null {\r\n    const regexp = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$/);\r\n    if (!regexp.test(control.value)) {\r\n        return { 'passwordValidation': true };\r\n    }\r\n    return null;\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function yearRange(control: AbstractControl): { [key: string]: boolean } | null {\r\n    let maxYear = new Date().getFullYear();\r\n    let minYear = 1920;\r\n    if (control.value > maxYear || control.value < minYear) {\r\n        return { 'ageRange': true };\r\n    } if (maxYear - control.value < 18) {\r\n        return { 'adultRange': true };\r\n    }\r\n    return null;\r\n}\r\n\r\n"],"sourceRoot":""}