{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.scss","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/pages/login-page/login-page.component.html","webpack:///./src/app/auth/pages/login-page/login-page.component.scss","webpack:///./src/app/auth/pages/login-page/login-page.component.ts","webpack:///./src/app/auth/pages/registration-page/registration-page.component.html","webpack:///./src/app/auth/pages/registration-page/registration-page.component.scss","webpack:///./src/app/auth/pages/registration-page/registration-page.component.ts","webpack:///./src/app/shared/validators/must-match.validator.ts","webpack:///./src/app/shared/validators/password.validator.ts","webpack:///./src/app/shared/validators/year-range.validator.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginAuthComponent } from './pages/login-page/login-page.component';\nimport { RegistrationAuthComponent } from './pages/registration-page/registration-page.component';\nimport { AuthComponent } from './auth.component';\n\nconst routes: Routes = [ \n  { path: '', component: AuthComponent, \n  children:[{ \n    path: 'login', component: LoginAuthComponent },\n  { path: 'register', component: RegistrationAuthComponent }]},\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n  <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginAuthComponent } from './pages/login-page/login-page.component';\nimport { RegistrationAuthComponent } from './pages/registration-page/registration-page.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { AuthComponent } from './auth.component';\n\n@NgModule({\n  declarations: [LoginAuthComponent, RegistrationAuthComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n","module.exports = \"<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n  <div class=\\\"formGroup\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"loginForm.get('email')\\\"></app-validator>\\n  </div>\\n\\n  <div class=\\\"loginForm\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n      formControlName=\\\"password\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"loginForm.get('password')\\\"></app-validator>\\n  </div>\\n  <div class=\\\"loginForm\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n  </div>\\n</form>\"","module.exports = \"div {\\n  margin-bottom: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wYWdlcy9sb2dpbi1wYWdlL0M6XFxVc2Vyc1xcQW51aXRleC04NFxcZ2l0XFxXZWJcXHNvdXJjZVxccmVwb3NcXEJsYWNrSmFja1xcQmxhY2tKYWNrLldFQlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxhdXRoXFxwYWdlc1xcbG9naW4tcGFnZVxcbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9wYWdlcy9sb2dpbi1wYWdlL2xvZ2luLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXZ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxJTsgXHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { takeUntil } from 'rxjs/operators';\nimport { LoginAccountView } from 'src/app/shared/entities/auth/login-account.view';\nimport { LoginAccountResponseView } from 'src/app/shared/entities/auth/login-account-response.view';\nimport { passwordValidation } from 'src/app/shared/validators/password.validator';\nimport { BaseComponent } from 'src/app/shared/components/base/base.component';\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\nexport class LoginAuthComponent extends BaseComponent {\n  private loginForm: FormGroup;\n  constructor(private readonly authService: AuthService, private readonly formBuilder: FormBuilder, private readonly router: Router) {\n    super();\n    this.initForms();\n  }\n  ngOnInit() {\n  }\n  private initForms(): void {\n    this.loginForm = this.formBuilder.group({\n      'email': ['', [Validators.required, Validators.email]],\n      'password': ['', [Validators.required, Validators.minLength(6), passwordValidation]],\n    });\n  }\n  private login(): void {\n    if (this.loginForm.invalid) {\n      return;\n    }\n    const loginAccount: LoginAccountView = Object.assign({\n      email: this.loginForm.controls['email'].value,\n      password: this.loginForm.controls['password'].value\n    });\n\n    this.authService.login(loginAccount)\n      .pipe(takeUntil(this.componetDestroyed))\n      .subscribe((response: LoginAccountResponseView) => {\n        this.router.navigate([\"/game/home\"]);\n      });\n  }\n}","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2>Please enter your information</h2>\\n  </div>\\n</div>\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n  <div class=\\\"formGroup\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"registerForm.get('email')\\\"></app-validator>\\n  </div>\\n  <div class=\\\"formGroup\\\">\\n    <label for=\\\"name\\\">Name</label>\\n    <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"registerForm.get('name')\\\"></app-validator>\\n  </div>\\n  <div class=\\\"formGroup\\\">\\n    <label for=\\\"year\\\">Year</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"year\\\" placeholder=\\\"Year\\\" formControlName=\\\"year\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"registerForm.get('year')\\\"></app-validator>\\n  </div>\\n  <div class=\\\"formGroup\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n      formControlName=\\\"password\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"registerForm.get('password')\\\"></app-validator>\\n  </div>\\n  <div class=\\\"formGroup\\\">\\n    <label for=\\\"confirmPassword\\\">Confirm password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Confirm password\\\"\\n      formControlName=\\\"confirmPassword\\\">\\n  </div>\\n  <div>\\n    <app-validator [control]=\\\"registerForm.get('confirmPassword')\\\"></app-validator>\\n  </div>\\n  <div class=\\\"formGroup\\\">\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"registerForm.invalid\\\">Register</button>\\n  </div>\\n</form>\"","module.exports = \"div {\\n  margin-bottom: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9wYWdlcy9yZWdpc3RyYXRpb24tcGFnZS9DOlxcVXNlcnNcXEFudWl0ZXgtODRcXGdpdFxcV2ViXFxzb3VyY2VcXHJlcG9zXFxCbGFja0phY2tcXEJsYWNrSmFjay5XRUJcXENsaWVudEFwcC9zcmNcXGFwcFxcYXV0aFxccGFnZXNcXHJlZ2lzdHJhdGlvbi1wYWdlXFxyZWdpc3RyYXRpb24tcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9wYWdlcy9yZWdpc3RyYXRpb24tcGFnZS9yZWdpc3RyYXRpb24tcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIG1hcmdpbi1ib3R0b206IDElOyBcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/shared/services/auth.service';\nimport { Router } from '@angular/router';\nimport { mustMatch } from 'src/app/shared/validators/must-match.validator';\nimport { yearRange } from 'src/app/shared/validators/year-range.validator';\nimport { GetAllAccountView, UserGetAllAccountViewItem } from 'src/app/shared/entities/auth/get-all-account.view';\nimport { RegisterAccountView } from 'src/app/shared/entities/auth/register-account.view';\nimport { takeUntil } from 'rxjs/operators';\nimport { ToastrMessagesService } from 'src/app/shared/services/toastr-messages.service';\nimport { LoginAccountResponseView } from 'src/app/shared/entities/auth/login-account-response.view';\nimport { passwordValidation } from 'src/app/shared/validators/password.validator';\nimport { BaseComponent } from 'src/app/shared/components/base/base.component';\n\n@Component({\n  selector: 'app-registration-page',\n  templateUrl: './registration-page.component.html',\n  styleUrls: ['./registration-page.component.scss']\n})\nexport class RegistrationAuthComponent extends BaseComponent {\n  private registerForm: FormGroup;\n  private accoutsModel: GetAllAccountView;\n  constructor(private readonly authService: AuthService, private readonly router: Router, private readonly formBuilder: FormBuilder,\n    private readonly toastrService: ToastrMessagesService) {\n    super();\n    this.initForms();\n  }\n  ngOnInit() {\n    this.authService.getAll()\n      .pipe(takeUntil(this.componetDestroyed))\n      .subscribe((response: GetAllAccountView) => {\n        this.accoutsModel = response;\n      });\n  }\n  private initForms(): void {\n    this.registerForm = this.formBuilder.group({\n      'email': ['', [Validators.required, Validators.email]],\n      'name': ['', [Validators.required, Validators.maxLength(15)]],\n      'year': ['', [Validators.required, Validators.minLength(4), yearRange, Validators.maxLength(4), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      'password': ['', [Validators.required, Validators.minLength(6), passwordValidation]],\n      'confirmPassword': ['', [Validators.required, Validators.minLength(6), passwordValidation]],\n    }, {\n        validator: mustMatch('password', 'confirmPassword')\n      });\n  }\n  private register(): void {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    const registerAccount: RegisterAccountView = Object.assign({\n      email: this.registerForm.value['email'],\n      name: this.registerForm.value['name'],\n      year: this.registerForm.value['year'],\n      password: this.registerForm.value['password'],\n      confirmPassword: this.registerForm.value['confirmPassword'],\n    });\n    const isExistUser: boolean = !!this.accoutsModel.users\n      .find((user: UserGetAllAccountViewItem) => user.email === registerAccount.email);\n    if (isExistUser) {\n      let errorMessage = { message: `Username ${registerAccount.email} is already taken` };\n      this.toastrService.warning(errorMessage.message,'Warning');\n    }\n    if (!isExistUser) {\n      this.authService.register(registerAccount)\n        .pipe(takeUntil(this.componetDestroyed))\n        .subscribe((response: LoginAccountResponseView) => {\n          this.toastrService.success(`Email ${registerAccount.email} is successfully register.`,'All set!');\n          this.router.navigate(['/auth/login']);\n        });\n    }\n  }\n}\n\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function mustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function passwordValidation(control: AbstractControl): { [key: string]: boolean } | null {\r\n    const regexp = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$/);\r\n    if (!regexp.test(control.value)) {\r\n        return { 'passwordValidation': true };\r\n    }\r\n    return null;\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function yearRange(control: AbstractControl): { [key: string]: boolean } | null {\r\n    let maxYear = 2019;\r\n    let minYear = 1920;\r\n    if (control.value > maxYear || control.value < minYear) {\r\n        return { 'ageRange': true };\r\n    } if (maxYear - control.value < 18) {\r\n        return { 'adultRange': true };\r\n    }\r\n    return null;\r\n}\r\n\r\n"],"sourceRoot":""}