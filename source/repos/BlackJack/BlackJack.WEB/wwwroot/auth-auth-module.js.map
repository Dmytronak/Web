{"version":3,"sources":["webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/login-auth/login-auth.component.html","webpack:///./src/app/auth/login-auth/login-auth.component.scss","webpack:///./src/app/auth/login-auth/login-auth.component.ts","webpack:///./src/app/auth/registration-auth/registration-auth.component.html","webpack:///./src/app/auth/registration-auth/registration-auth.component.scss","webpack:///./src/app/auth/registration-auth/registration-auth.component.ts","webpack:///./src/app/shared/helpers/must-match.helper.ts","webpack:///./src/app/shared/helpers/year-range.helper.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginAuthComponent } from './login-auth/login-auth.component';\nimport { RegistrationAuthComponent } from './registration-auth/registration-auth.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginAuthComponent},\n  { path: 'register', component: RegistrationAuthComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginAuthComponent } from './login-auth/login-auth.component';\nimport { RegistrationAuthComponent } from './registration-auth/registration-auth.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginAuthComponent, RegistrationAuthComponent],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    SharedModule\n  ]\n})\nexport class AuthModule { }\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6 new-user-alert\\\">\\n    <div *ngIf=\\\"brandNew\\\" class=\\\"alert alert-success\\\" role=\\\"alert\\\">\\n      <strong>All set!</strong> Please login with your account\\n    </div>\\n    <h2>Login</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"login(formGroup.value)\\\">\\n\\n      <div class=\\\"formGroup\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" required name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n      </div>\\n      <div\\n        *ngIf=\\\"formGroup.controls['email'].invalid && (formGroup.controls['email'].dirty || formGroup.controls['email'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"formGroup.controls['email'].errors.required\\\">\\n          Email is required.\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['email'].errors.email\\\">\\n          Email not validate\\n        </div>\\n\\n      </div>\\n      <div class=\\\"formGroup\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" required name=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\">\\n      </div>\\n      <div\\n        *ngIf=\\\"formGroup.controls['password'].invalid && (formGroup.controls['password'].dirty || formGroup.controls['password'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"formGroup.controls['password'].errors.required\\\">\\n          Password is required.\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['password'].errors.minlength\\\">\\n          Password minLength 6\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['password'].errors.pattern\\\">\\n            Password not validate\\n          </div>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"formGroup.invalid\\\">Login</button>\\n      </div>\\n\\n      <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n        <strong>Oops!</strong> {{error}}\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\"","module.exports = \"div {\\n  margin-bottom: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi1hdXRoL0M6XFxVc2Vyc1xcQW51aXRleC04NFxcZ2l0XFxXZWJcXHNvdXJjZVxccmVwb3NcXEJsYWNrSmFja1xcQmxhY2tKYWNrLldFQlxcQ2xpZW50QXBwL3NyY1xcYXBwXFxhdXRoXFxsb2dpbi1hdXRoXFxsb2dpbi1hdXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL2xvZ2luLWF1dGgvbG9naW4tYXV0aC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImRpdntcclxuICAgIG1hcmdpbi1ib3R0b206IDElOyBcclxufSJdfQ== */\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { User } from 'src/app/shared/entities/user.view';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AlertService } from 'src/app/shared/services/alert.service';\n\n@Component({\n  selector: 'app-login-auth',\n  templateUrl: './login-auth.component.html',\n  styleUrls: ['./login-auth.component.scss']\n})\nexport class LoginAuthComponent implements OnInit, OnDestroy {\n  formGroup: FormGroup;\n  private subscription: Subscription;\n  brandNew: boolean;\n  error: string;\n  submitted: boolean = false;\n  credentials: User = { email: '', name:'',password: '',confirmPassword:'' ,year:0,token:''};\n  user: User;\n\n  constructor(private userService: UserService, private router: Router,\n     private activatedRoute: ActivatedRoute, private _formBuilder: FormBuilder,private alertService: AlertService) {\n    this.userService.loggedIn = !!localStorage.getItem('auth_token');\n    this.formGroup = _formBuilder.group({\n      'email': ['', Validators.email],\n      'password': ['', [Validators.minLength(6),Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$/)]],\n    });\n    \n  }\n\n  ngOnInit() {\n    this.userService._authNavStatusSource.next(this.userService.loggedIn);\n    this.subscription = this.activatedRoute.queryParams.subscribe(\n      (param: any) => {\n        this.brandNew = param['brandNew'];\n        this.credentials.email = param['email'];\n      });\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n  get f() {\n    return this.formGroup.controls;\n  }\n\n\n  login():User {\n   \n    this.user = Object.assign(this.credentials, this.formGroup.value);\n    this.submitted = true;\n\n    if (this.formGroup.invalid) {\n      return;\n    }\n    this.userService.login(this.user)\n      .subscribe(x => {\n        debugger\n        this.user.token = x['token'];\n        localStorage.setItem(\"auth_token\", this.user.token);\n        localStorage.setItem(\"email\", this.user.email);\n        this.userService._authNavStatusSource.next(true);\n        this.userService.loggedIn = true;\n        this.router.navigate([\"/game/home\"]);\n       \n      },\n        err => {\n         \n          this.userService.loggedIn = false;\n          this.error = err.error;\n       \n        }\n      )\n  }\n}\n\n\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <h2>Please enter your information</h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-6\\\">\\n    <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"registration(formGroup.value)\\\">\\n\\n      <div class=\\\"formGroup\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" required name=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\">\\n      </div>\\n      <div\\n        *ngIf=\\\"formGroup.controls['email'].invalid && (formGroup.controls['email'].dirty || formGroup.controls['email'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"formGroup.controls['email'].errors.required\\\">\\n          Email is required.\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['email'].errors.email\\\">\\n          Email not validate\\n        </div>\\n      </div>\\n      <div class=\\\"formGroup\\\">\\n          <label for=\\\"nmae\\\">Name</label>\\n          <input type=\\\"text\\\" required name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\">\\n        </div>\\n        <div\\n          *ngIf=\\\"formGroup.controls['name'].invalid && (formGroup.controls['name'].dirty || formGroup.controls['name'].touched)\\\"\\n          class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"formGroup.controls['name'].errors.required\\\">\\n            Name is required.\\n          </div>\\n          <div *ngIf=\\\"formGroup.controls['name'].errors.maxlength\\\">\\n            Name max Length 15\\n          </div>\\n        </div>\\n      <div class=\\\"formGroup\\\">\\n        <label for=\\\"year\\\">Year</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" required name=\\\"year\\\" placeholder=\\\"Year\\\" formControlName=\\\"year\\\">\\n      </div>\\n      <div\\n        *ngIf=\\\"formGroup.controls['year'].invalid && (formGroup.controls['year'].dirty || formGroup.controls['year'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"formGroup.controls['year'].errors.required\\\">\\n          year is required.\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['year'].errors.minlength\\\">\\n          year min min Length 4\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['year'].errors.maxlength\\\">\\n          year min max Length 4\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['year'].errors.pattern\\\">\\n            ONLY NUMB ERROR\\n          </div>\\n          <div *ngIf=\\\"formGroup.controls['year'].errors.ageRange\\\">\\n          Year range from 1920 to 2019\\n          </div>\\n          <div *ngIf=\\\"formGroup.controls['year'].errors.adultRange\\\">\\n           You don`t adult enough\\n          </div>\\n          \\n      </div>\\n      <div class=\\\"formGroup\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" required class=\\\"form-control\\\" name=\\\"password\\\" placeholder=\\\"Password\\\"\\n          formControlName=\\\"password\\\">\\n      </div>\\n      <div\\n        *ngIf=\\\"formGroup.controls['password'].invalid && (formGroup.controls['password'].dirty || formGroup.controls['password'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"formGroup.controls['password'].errors.required\\\">\\n          Password is required.\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['password'].errors.minlength\\\">\\n          Password minLength 6\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['password'].errors.pattern\\\">\\n          Password not validate\\n        </div>\\n      </div>\\n\\n      <div class=\\\"formGroup\\\">\\n        <label for=\\\"confirmPassword\\\">Confirm password</label>\\n        <input type=\\\"password\\\" required class=\\\"form-control\\\" name=\\\"confirmPassword\\\" placeholder=\\\"Confirm password\\\"\\n          formControlName=\\\"confirmPassword\\\">\\n      </div>\\n      <div\\n        *ngIf=\\\"formGroup.controls['confirmPassword'].invalid && (formGroup.controls['confirmPassword'].dirty || formGroup.controls['confirmPassword'].touched)\\\"\\n        class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"formGroup.controls['confirmPassword'].errors.required\\\">\\n          Password is required.\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['confirmPassword'].errors.minlength\\\">\\n          Password min Length 6\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['confirmPassword'].errors.pattern\\\">\\n          Password not validate\\n        </div>\\n        <div *ngIf=\\\"formGroup.controls['confirmPassword'].errors.mustMatch\\\">\\n          Passwords must match\\n        </div>\\n      </div>\\n      <div class=\\\"formGroup\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"formGroup.invalid\\\">Register</button>\\n      </div>\\n\\n      <div *ngIf=\\\"error\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\n        <strong>Oops!</strong> {{error}}\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n</div>\"","module.exports = \"div {\\n  margin-bottom: 1%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9yZWdpc3RyYXRpb24tYXV0aC9DOlxcVXNlcnNcXEFudWl0ZXgtODRcXGdpdFxcV2ViXFxzb3VyY2VcXHJlcG9zXFxCbGFja0phY2tcXEJsYWNrSmFjay5XRUJcXENsaWVudEFwcC9zcmNcXGFwcFxcYXV0aFxccmVnaXN0cmF0aW9uLWF1dGhcXHJlZ2lzdHJhdGlvbi1hdXRoLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hdXRoL3JlZ2lzdHJhdGlvbi1hdXRoL3JlZ2lzdHJhdGlvbi1hdXRoLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZGl2e1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMSU7IFxyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { User } from 'src/app/shared/entities/user.view';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from 'src/app/shared/services/user.service';\nimport { Router } from '@angular/router';\nimport { AlertService } from 'src/app/shared/services/alert.service';\nimport { MustMatch } from 'src/app/shared/helpers/must-match.helper';\nimport { throwError } from 'rxjs';\nimport { YearRange } from 'src/app/shared/helpers/year-range.helper';\n\n@Component({\n  selector: 'app-registration-auth',\n  templateUrl: './registration-auth.component.html',\n  styleUrls: ['./registration-auth.component.scss']\n})\nexport class RegistrationAuthComponent implements OnInit {\n\n  error: string;\n  isRequesting: boolean;\n  submitted: boolean = false;\n  public registerForm: User;\n  formGroup: FormGroup;\n  public users: User[] = [];\n  public user: User;\n\n  constructor(private userService: UserService, private router: Router, private _formBuilder: FormBuilder, private alertService: AlertService) {\n    this.formGroup = _formBuilder.group({\n      'email': ['', Validators.email],\n      'name': ['', Validators.maxLength(15)],\n      'year': ['', [Validators.minLength(4),YearRange, Validators.maxLength(4), Validators.pattern(/^-?(0|[1-9]\\d*)?$/)]],\n      'password': ['', [Validators.minLength(6), Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$/)]],\n      'confirmPassword': ['', [Validators.minLength(6), Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$/)]],\n    }, {\n        validator: MustMatch('password', 'confirmPassword')\n      });\n  }\n\n  ngOnInit() {\n    this.registerForm =\n      {\n        email: '',\n        name:'',\n        year: 0,\n        password: '',\n        confirmPassword: '',\n        token: '',\n      }\n    this.userService.registerUsers().subscribe((user: User[]) => {\n      this.users = user['users'];\n    }, error => error);\n\n  }\n\n  registration() {\n    this.submitted = true;\n    this.isRequesting = true;\n    this.user = Object.assign(this.registerForm, this.formGroup.value)\n    let newUser = this.user.email;\n    let duplicateUser = this.users.filter(x => { return x.email === newUser; }).length;\n    if (this.formGroup.invalid) {\n      return;\n    }\n    if (duplicateUser) {\n      let errorMessage = { status: 422, message: 'Username \"' + newUser + '\" is already taken' }\n      throwError(new Error(errorMessage.message));\n      this.error = errorMessage.message;\n      return this.alertService.error(errorMessage.message);\n    }\n    this.userService.register(this.user)\n      .subscribe(x => {\n        if (x) {\n          this.router.navigate(['/auth/login'], { queryParams: { brandNew: true, email: this.user.email } });\n        }\n      },\n        err => {\n          this.error = err.error;\n        }\n\n      )\n  }\n}\n\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","import { AbstractControl } from '@angular/forms';\r\n\r\n\r\n// custom validator to check that two fields match\r\nexport function YearRange(control: AbstractControl): { [key: string]: boolean } | null {\r\n    let maxYear = 2019;\r\n    let minYear = 1920;\r\n    if (control.value > maxYear || control.value < minYear) {\r\n        return { 'ageRange': true };\r\n    } if (maxYear - control.value < 18) {\r\n        return { 'adultRange': true };\r\n    }\r\n    return null;\r\n}\r\n\r\n"],"sourceRoot":""}